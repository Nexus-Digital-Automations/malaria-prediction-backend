apiVersion: v1
kind: Secret
metadata:
  name: malaria-predictor-secrets
  namespace: malaria-prediction
  labels:
    app: malaria-predictor
    component: secrets
    version: v1.0.0
type: Opaque
data:
  # NOTE: All values below are base64 encoded placeholders
  # Replace with actual base64-encoded values in production

  # API Secret Key (base64 encoded)
  # Generate with: openssl rand -base64 32
  api_secret_key: REPLACE_WITH_BASE64_ENCODED_SECRET_KEY

  # Database Password (base64 encoded)
  # Generate with: echo -n "your_password" | base64
  db_password: REPLACE_WITH_BASE64_ENCODED_DB_PASSWORD

  # Redis Password (base64 encoded) - Optional
  # Generate with: echo -n "your_redis_password" | base64
  redis_password: REPLACE_WITH_BASE64_ENCODED_REDIS_PASSWORD

  # ERA5 API Key (base64 encoded)
  # Get from: https://cds.climate.copernicus.eu/api-how-to
  # Encode with: echo -n "your_era5_key" | base64
  era5_api_key: REPLACE_WITH_BASE64_ENCODED_ERA5_KEY

  # MODIS API Key (base64 encoded)
  # Get from: https://urs.earthdata.nasa.gov/
  # Encode with: echo -n "your_modis_key" | base64
  modis_api_key: REPLACE_WITH_BASE64_ENCODED_MODIS_KEY

---
apiVersion: v1
kind: Secret
metadata:
  name: malaria-predictor-database-secret
  namespace: malaria-prediction
  labels:
    app: malaria-predictor
    component: database-secret
    version: v1.0.0
type: Opaque
stringData:
  # Database connection string (not base64 encoded when using stringData)
  # Replace with actual production values
  DATABASE_URL: "postgresql+asyncpg://malaria_user:REPLACE_WITH_ACTUAL_PASSWORD@malaria-postgresql:5432/malaria_prediction"
  DATABASE_HOST: "malaria-postgresql"
  DATABASE_PORT: "5432"
  DATABASE_NAME: "malaria_prediction"
  DATABASE_USER: "malaria_user"
  DATABASE_PASSWORD: "REPLACE_WITH_ACTUAL_PASSWORD"

---
apiVersion: v1
kind: Secret
metadata:
  name: malaria-predictor-redis-secret
  namespace: malaria-prediction
  labels:
    app: malaria-predictor
    component: redis-secret
    version: v1.0.0
type: Opaque
stringData:
  # Redis connection details (not base64 encoded when using stringData)
  REDIS_URL: "redis://:REPLACE_WITH_REDIS_PASSWORD@malaria-redis:6379/0"
  REDIS_HOST: "malaria-redis"
  REDIS_PORT: "6379"
  REDIS_PASSWORD: "REPLACE_WITH_ACTUAL_REDIS_PASSWORD"

---
apiVersion: v1
kind: Secret
metadata:
  name: malaria-predictor-api-keys
  namespace: malaria-prediction
  labels:
    app: malaria-predictor
    component: api-keys
    version: v1.0.0
type: Opaque
stringData:
  # External API keys (not base64 encoded when using stringData)
  ERA5_API_KEY: "REPLACE_WITH_ACTUAL_ERA5_API_KEY"
  MODIS_API_KEY: "REPLACE_WITH_ACTUAL_MODIS_API_KEY"

  # Optional: Sentry DSN for error tracking
  SENTRY_DSN: "REPLACE_WITH_ACTUAL_SENTRY_DSN"

---
apiVersion: v1
kind: Secret
metadata:
  name: malaria-predictor-tls-secret
  namespace: malaria-prediction
  labels:
    app: malaria-predictor
    component: tls-secret
    version: v1.0.0
type: kubernetes.io/tls
data:
  # TLS certificate and key (base64 encoded)
  # Generate with: kubectl create secret tls malaria-predictor-tls-secret --cert=path/to/cert.crt --key=path/to/cert.key
  tls.crt: REPLACE_WITH_BASE64_ENCODED_CERTIFICATE
  tls.key: REPLACE_WITH_BASE64_ENCODED_PRIVATE_KEY
